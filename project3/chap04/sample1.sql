-- ORDER BY 절 : 조회 결과에 대해 정렬을 하기 위해 사용
-- 오름차순(ASC), 내림차순(DESC) 정렬으 할 수 있으며, 기본은 오름차순이다.
-- SELECT 절, FROM 절, WHERE 절 들보다 가장 마지막에 실행된다.

SELECT S.STUDENT_NO AS 학번,
       S.STUDENT_NAME AS 이름,
       CONCAT(SUBSTR(S.STUDENT_SSN, 1,8), '******') AS 주민번호,
       D.DEPARTMENT_NAME AS 학과명,
       DECODE(S.ABSENCE_YN, 'Y', '재학중', 'N', '휴학중', '기타') AS 휴학유무 
  FROM TB_STUDENT S JOIN TB_DEPARTMENT D
    ON S.DEPARTMENT_NO = D.DEPARTMENT_NO;

SELECT S.STUDENT_NO AS 학번,
       S.STUDENT_NAME AS 이름,
       CONCAT(SUBSTR(S.STUDENT_SSN, 1,8), '******') AS 주민번호,
       D.DEPARTMENT_NAME AS 학과명,
       CASE S.ABSENCE_YN WHEN 'Y' THEN '재학중' 
                         WHEN 'N' THEN '휴학중' 
                         ELSE '기타'
        END AS 휴학유무    
  FROM TB_STUDENT S JOIN TB_DEPARTMENT D
    ON S.DEPARTMENT_NO = D.DEPARTMENT_NO;

SELECT *
  FROM TB_DEPARTMENT; 

SELECT * 
  FROM TB_STUDENT
 ORDER BY DEPARTMENT_NO DESC;

SELECT *
  FROM TB_STUDENT
 ORDER BY DEPARTMENT_NO, STUDENT_NAME; 

SELECT *
  FROM TB_STUDENT
 ORDER BY DEPARTMENT_NO, STUDENT_NAME DESC;  

SELECT *
  FROM TB_STUDENT
 ORDER BY DEPARTMENT_NO DESC, STUDENT_NAME;   

SELECT *
  FROM TB_STUDENT
 ORDER BY 2;  
 
SELECT *
  FROM TB_STUDENT
 ORDER BY 2,3 DESC;  

SELECT DEPARTMENT_NO AS 학과번호,
        STUDENT_NAME AS 학생명,
        STUDENT_ADDRESS AS 주소
  FROM TB_STUDENT
 ORDER BY 학과번호;

SELECT *
  FROM TB_STUDENT
 ORDER BY DEPARTMENT_NO, COACH_PROFESSOR_NO NULLS FIRST;

SELECT *
  FROM TB_STUDENT
 ORDER BY TO_DATE(SUBSTR(STUDENT_SSN,1 ,6), 'rrmmdd');

-- GROUP BY 절 : 동일한 컬럼값을 가지는 행 데이터에 대해 그룹화를 시켜서 집계함수를 사용한
-- 정보를 조회하기 위해 사용
-- SELECT 절에 명시한 컬럼에 대해 그룹화를 시킨다.
-- 집계 함수 : COUNT(), MAX(), MIN(), AVG(), SUM() ..

SELECT DEPARTMENT_NO
       --COUNT(DEPARTMENT_NO) AS 학과별인원
  FROM TB_STUDENT
 GROUP BY DEPARTMENT_NO
 ORDER BY DEPARTMENT_NO;

SELECT DEPARTMENT_NO AS 학과번호,
       ABSENCE_YN AS 휴학유무,
       COUNT(*) AS 학과별인원
  FROM TB_STUDENT
 GROUP BY DEPARTMENT_NO, ABSENCE_YN
 ORDER BY 학과번호;

-- 학기별 학생별 학점 총점
SELECT STUDENT_NO AS 학생번호,
       SUM(POINT) AS 총점
  FROM TB_GRADE
  GROUP BY STUDENT_NO
  ORDER BY 학생번호;

-- 학기별 평균 점수
SELECT TERM_NO AS 학기번호,
       AVG(POINT) AS 평균
  FROM TB_GRADE
 GROUP BY TERM_NO
 ORDER BY 학기번호;

-- 학기별 최고 점수
SELECT TERM_NO AS 학기번호,
       MAX(POINT) AS 최고점수
  FROM TB_GRADE
 GROUP BY TERM_NO
 ORDER BY 학기번호;

-- 년도별 최고/최저 점수
SELECT SUBSTR(TERM_NO, 1, 4) AS 년도별,
       MAX(POINT) AS 최고점수,
       MIN(POINT) AS 최저점수
  FROM TB_GRADE
 GROUP BY SUBSTR(TERM_NO, 1, 4)
 ORDER BY 년도별;

-- EMPLOYEES 테이블에서 JOB_ID 별 인원 수를 파악하는 쿼리문
SELECT JOB_ID AS 직무,
       COUNT(JOB_ID) AS "직무 별 인원 수"
  FROM EMPLOYEES
 GROUP BY JOB_ID
 ORDER BY "직무 별 인원 수";


-- EMPLOYEES 테이블에서 DEPARTMENT_ID 별 인원 수를 파악하는 쿼리문
SELECT DEPARTMENT_ID AS 부서,
       COUNT(*) AS "부서 별 인원 수"
  FROM EMPLOYEES
 GROUP BY DEPARTMENT_ID
 ORDER BY DEPARTMENT_ID; 


SELECT * FROM TB_GRADE ORDER BY TERM_NO;
SELECT * FROM USER_COL_COMMENTS WHERE TABLE_NAME = 'TB_GRADE';