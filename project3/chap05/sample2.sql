-- SELECT 절에 서브쿼리 사용 -> Scalar(스칼라) Sub Query
-- 스칼라 : 단일 값, 정해진 값
SELECT EMPLOYEE_ID,
       FIRST_NAME,
       LAST_NAME,
       EMAIL,
       PHONE_NUMBER,
       HIRE_DATE,
       JOB_ID,
       (SELECT JOB_TITLE 
          FROM JOBS B
         WHERE B.JOB_ID = A.JOB_ID) AS JOB_TITLE,
       SALARY,
       COMMISSION_PCT,
       MANAGER_ID,
       DEPARTMENT_ID,
       (SELECT DEPARTMENT_NAME 
          FROM DEPARTMENTS C 
         WHERE C.DEPARTMENT_ID = A.DEPARTMENT_ID) AS DEPARTMENT_NAME
  FROM EMPLOYEES A;

-- WHERE 절에 서브쿼리 사용 -> 상호연관 서브쿼리
SELECT *
  FROM EMPLOYEES
 WHERE SALARY >= (SELECT AVG(SALARY) FROM EMPLOYEES);

SELECT *
  FROM EMPLOYEES
 WHERE EMPLOYEE_ID IN (SELECT DISTINCT MANAGER_ID FROM EMPLOYEES WHERE MANAGER_ID IS NOT NULL);


-- FROM 절에 서브쿼리 사용 -> Inline View(인라인 뷰)
SELECT *
  FROM (SELECT EMPLOYEE_ID,
               FIRST_NAME,
               LAST_NAME
          FROM EMPLOYEES);

WITH TEMP AS (
    SELECT EMPLOYEE_ID,
           FIRST_NAME,
           LAST_NAME
     FROM EMPLOYEES
)
SELECT * FROM TEMP;


-- 랭킹 조회
SELECT *
  FROM (SELECT EMPLOYEE_ID,
               FIRST_NAME,
               LAST_NAME,
               SALARY,
               RANK() OVER(ORDER BY SALARY DESC) AS "RANK"
          FROM EMPLOYEES
         ORDER BY SALARY DESC)
 WHERE "RANK" <= 10;


SELECT *
  FROM (SELECT EMPLOYEE_ID,
               FIRST_NAME,
               LAST_NAME,
               SALARY,
               DENSE_RANK() OVER(ORDER BY SALARY DESC) AS "RANK"
          FROM EMPLOYEES
         ORDER BY SALARY DESC)
 WHERE "RANK" <= 10;


-- 모든 조회 결과에는 코드가 아닌 식별가능한 값도 조회되어야 한다.
-- 1. 매니저가 존재하는 부서의 사원들을 조회
--    (DEPARTMENTS, EMPLOYEES)

SELECT * FROM EMPLOYEES;

-- Table Join
SELECT E.EMPLOYEE_ID,
       D.DEPARTMENT_NAME,
       D.MANAGER_ID,
       E.FIRST_NAME || ' ' || E.LAST_NAME AS "NAME"
  FROM DEPARTMENTS D JOIN EMPLOYEES E
    ON D.DEPARTMENT_ID = E.DEPARTMENT_ID
 WHERE D.MANAGER_ID IS NOT NULL
 ORDER BY 1;



-- SUBQUERY
SELECT E.EMPLOYEE_ID,
       E.FIRST_NAME || ' ' || E.LAST_NAME AS "NAME",
       E.DEPARTMENT_ID,
       (SELECT D.DEPARTMENT_NAME
          FROM DEPARTMENTS D
         WHERE D.DEPARTMENT_ID = E.DEPARTMENT_ID) AS DEPARTMENT_NAME    
  FROM EMPLOYEES E
 WHERE E.DEPARTMENT_ID IN (SELECT DEPARTMENT_ID
                             FROM DEPARTMENTS
                            WHERE MANAGER_ID IS NOT NULL)
 ORDER BY 1;
 


-- 2. 유럽, 아메리카, 아시아, 중앙아시아/아프리카 지역(REGIONS)에 있는 부서의 수를 조회
--    (REGIONS, COUNTRIES, LOCATIONS, DEPARTMENTS)

SELECT R.REGION_NAME,COUNT(DEPARTMENT_ID)
  FROM REGIONS R JOIN COUNTRIES C
    ON R.REGION_ID = C.REGION_ID
  JOIN LOCATIONS L
    ON C.COUNTRY_ID = L.COUNTRY_ID
  JOIN DEPARTMENTS D
    ON L.LOCATION_ID = D.LOCATION_ID
 GROUP BY R.REGION_NAME;

-- 3. 모든 부서의 위치(주소)를 조회
--    (REGIONS, COUNTRIES, LOCATIONS, DEPARTMENTS)

SELECT D.DEPARTMENT_NAME, L.STREET_ADDRESS
  FROM REGIONS R JOIN COUNTRIES C
    ON R.REGION_ID = C.REGION_ID
  JOIN LOCATIONS L
    ON C.COUNTRY_ID = L.COUNTRY_ID
  JOIN DEPARTMENTS D
    ON L.LOCATION_ID = D.LOCATION_ID;



-- 4. 아메리카 지역에 해당하는 부서와 소속 사원들을 조회
--    (REGIONS, COUNTRIES, LOCATIONS, DEPARTMENTS, EMPLOYEES)

SELECT D.DEPARTMENT_NAME, E.FIRST_NAME || ' ' || E.LAST_NAME AS "NAME"
  FROM REGIONS R JOIN COUNTRIES C
    ON R.REGION_ID = C.REGION_ID
  JOIN LOCATIONS L
    ON C.COUNTRY_ID = L.COUNTRY_ID
  JOIN DEPARTMENTS D
    ON L.LOCATION_ID = D.LOCATION_ID
  JOIN EMPLOYEES E
    ON D.DEPARTMENT_ID = E.DEPARTMENT_ID
 WHERE R.REGION_ID = 3;


-- 5. 소속 지역별 평균급여 랭크 조회(지역은 대륙단위로 묶어서 한다.)
--    (REGIONS, COUNTRIES, LOCATIONS, DEPARTMENTS, EMPLOYEES)

SELECT R.REGION_NAME, AVG(E.SALARY)
  FROM REGIONS R JOIN COUNTRIES C
    ON R.REGION_ID = C.REGION_ID
  JOIN LOCATIONS L
    ON C.COUNTRY_ID = L.COUNTRY_ID
  JOIN DEPARTMENTS D
    ON L.LOCATION_ID = D.LOCATION_ID
  JOIN EMPLOYEES E
    ON D.DEPARTMENT_ID = E.DEPARTMENT_ID
 GROUP BY REGION_NAME;


-- 6. 국가별 평균급여 랭크 조회
--    (COUNTRIES, LOCATIONS, DEPARTMENTS, EMPLOYEES)

SELECT COUNTRY_NAME, AVG(SALARY),RANK() OVER(ORDER BY AVG(SALARY) DESC) AS "RANK"
  FROM COUNTRIES C JOIN LOCATIONS L
    ON C.COUNTRY_ID = L.COUNTRY_ID
  JOIN DEPARTMENTS D
    ON L.LOCATION_ID = D.LOCATION_ID
  JOIN EMPLOYEES E
    ON D.DEPARTMENT_ID = E.DEPARTMENT_ID
  GROUP BY COUNTRY_NAME;


-- 7. 국가별/부서별 평균급여 조회(전체 평균 및 국가 단위 평균, 부서 단위 평균의 통계가 필요)
--    (COUNTRIES, LOCATIONS, DEPARTMENTS, EMPLOYEES)

SELECT C.COUNTRY_NAME, D.DEPARTMENT_NAME, AVG(SALARY)
  FROM COUNTRIES C JOIN LOCATIONS L
    ON C.COUNTRY_ID = L.COUNTRY_ID
  JOIN DEPARTMENTS D
    ON L.LOCATION_ID = D.LOCATION_ID
  JOIN EMPLOYEES E
    ON D.DEPARTMENT_ID = E.DEPARTMENT_ID
  GROUP BY CUBE(C.COUNTRY_NAME, D.DEPARTMENT_NAME);



SELECT * FROM REGIONS;
SELECT * FROM COUNTRIES;
SELECT * FROM DEPARTMENTS;
SELECT * FROM LOCATIONS;
SELECT * FROM EMPLOYEES;

















